  test_polinom.cpp
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@ArrayTable_can_check_is_tab_ended_1_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_can_check_is_tab_ended_2_Test::TestBody(void)" (?TestBody@ArrayTable_can_check_is_tab_ended_2_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_can_delete_existing_elem_Test::TestBody(void)" (?TestBody@ArrayTable_can_delete_existing_elem_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_can_find_elem_Test::TestBody(void)" (?TestBody@ArrayTable_can_find_elem_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_can_get_value_Test::TestBody(void)" (?TestBody@ArrayTable_can_get_value_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_can_go_next_Test::TestBody(void)" (?TestBody@ArrayTable_can_go_next_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_can_reset_Test::TestBody(void)" (?TestBody@ArrayTable_can_reset_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_cant_delete_elem_when_its_empty_Test::TestBody(void)" (?TestBody@ArrayTable_cant_delete_elem_when_its_empty_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_cant_delete_non_existing_elem_Test::TestBody(void)" (?TestBody@ArrayTable_cant_delete_non_existing_elem_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_cant_find_elem_Test::TestBody(void)" (?TestBody@ArrayTable_cant_find_elem_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_cant_find_when_is_empty_Test::TestBody(void)" (?TestBody@ArrayTable_cant_find_when_is_empty_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: virtual void __thiscall ArrayTable_cant_go_next_Test::TestBody(void)" (?TestBody@ArrayTable_cant_go_next_Test@@EAEXXZ) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_cant_find_when_is_empty_Test::test_info_" (?test_info_@ArrayTable_cant_find_when_is_empty_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_can_find_elem_Test::test_info_" (?test_info_@ArrayTable_can_find_elem_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_cant_find_elem_Test::test_info_" (?test_info_@ArrayTable_cant_find_elem_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_cant_delete_elem_when_its_empty_Test::test_info_" (?test_info_@ArrayTable_cant_delete_elem_when_its_empty_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_can_delete_existing_elem_Test::test_info_" (?test_info_@ArrayTable_can_delete_existing_elem_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_cant_delete_non_existing_elem_Test::test_info_" (?test_info_@ArrayTable_cant_delete_non_existing_elem_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_can_check_is_tab_ended_1_Test::test_info_" (?test_info_@ArrayTable_can_check_is_tab_ended_1_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_can_go_next_Test::test_info_" (?test_info_@ArrayTable_can_go_next_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_cant_go_next_Test::test_info_" (?test_info_@ArrayTable_cant_go_next_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_can_reset_Test::test_info_" (?test_info_@ArrayTable_can_reset_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_can_check_is_tab_ended_2_Test::test_info_" (?test_info_@ArrayTable_can_check_is_tab_ended_2_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_list_table.obj : error LNK2005: "private: static class testing::TestInfo * ArrayTable_can_get_value_Test::test_info_" (?test_info_@ArrayTable_can_get_value_Test@@0QAVTestInfo@testing@@A) уже определен в test_array_table.obj
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual struct TableString * __thiscall ArrayTable::find_str(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?find_str@ArrayTable@@UAEPAUTableString@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall ArrayTable_can_find_elem_Test::TestBody(void)" (?TestBody@ArrayTable_can_find_elem_Test@@EAEXXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall ArrayTable::insert(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,struct TableBody &)" (?insert@ArrayTable@@UAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAUTableBody@@@Z) в функции "private: virtual void __thiscall ArrayTable_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@ArrayTable_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall ArrayTable::erase(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?erase@ArrayTable@@UAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall ArrayTable_can_delete_existing_elem_Test::TestBody(void)" (?TestBody@ArrayTable_can_delete_existing_elem_Test@@EAEXXZ).
test_array_table.obj : error LNK2001: неразрешенный внешний символ "public: virtual bool __thiscall ArrayTable::is_full(void)const " (?is_full@ArrayTable@@UBE_NXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall ArrayTable::reset(void)" (?reset@ArrayTable@@UAE_NXZ) в функции "private: virtual void __thiscall ArrayTable_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@ArrayTable_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall ArrayTable::is_tab_ended(void)const " (?is_tab_ended@ArrayTable@@UBE_NXZ) в функции "private: virtual void __thiscall ArrayTable_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@ArrayTable_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall ArrayTable::go_next(void)" (?go_next@ArrayTable@@UAE_NXZ) в функции "private: virtual void __thiscall ArrayTable_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@ArrayTable_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall ArrayTable::set_current_pos(int)" (?set_current_pos@ArrayTable@@QAE_NH@Z) в функции "private: virtual void __thiscall ArrayTable_can_set_current_pos_Test::TestBody(void)" (?TestBody@ArrayTable_can_set_current_pos_Test@@EAEXXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: int __thiscall ArrayTable::get_current_pos(void)const " (?get_current_pos@ArrayTable@@QBEHXZ) в функции "private: virtual void __thiscall ArrayTable_can_get_current_pos_Test::TestBody(void)" (?TestBody@ArrayTable_can_get_current_pos_Test@@EAEXXZ).
test_array_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual struct TableString * __thiscall ArrayTable::get_value(void)" (?get_value@ArrayTable@@UAEPAUTableString@@XZ) в функции "private: virtual void __thiscall ArrayTable_can_get_value_Test::TestBody(void)" (?TestBody@ArrayTable_can_get_value_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual struct TableString * __thiscall HashTableList::find_str(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?find_str@HashTableList@@UAEPAUTableString@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall HashTableList_can_find_elem_Test::TestBody(void)" (?TestBody@HashTableList_can_find_elem_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall HashTableList::insert(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,struct TableBody &)" (?insert@HashTableList@@UAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAUTableBody@@@Z) в функции "private: virtual void __thiscall HashTableList_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@HashTableList_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall HashTableList::erase(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?erase@HashTableList@@UAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall HashTableList_can_delete_existing_elem_Test::TestBody(void)" (?TestBody@HashTableList_can_delete_existing_elem_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2001: неразрешенный внешний символ "public: virtual bool __thiscall HashTableList::is_full(void)const " (?is_full@HashTableList@@UBE_NXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall HashTableList::reset(void)" (?reset@HashTableList@@UAE_NXZ) в функции "private: virtual void __thiscall HashTableList_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@HashTableList_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall HashTableList::is_tab_ended(void)const " (?is_tab_ended@HashTableList@@UBE_NXZ) в функции "private: virtual void __thiscall HashTableList_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@HashTableList_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall HashTableList::go_next(void)" (?go_next@HashTableList@@UAE_NXZ) в функции "private: virtual void __thiscall HashTableList_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@HashTableList_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual struct TableString * __thiscall HashTableList::get_value(void)" (?get_value@HashTableList@@UAEPAUTableString@@XZ) в функции "private: virtual void __thiscall HashTableList_can_get_value_Test::TestBody(void)" (?TestBody@HashTableList_can_get_value_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall HashTableList::set_current_pos(int)" (?set_current_pos@HashTableList@@QAE_NH@Z) в функции "private: virtual void __thiscall HashTableList_can_set_current_pos_Test::TestBody(void)" (?TestBody@HashTableList_can_set_current_pos_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: int __thiscall HashTableList::get_current_pos(void)const " (?get_current_pos@HashTableList@@QBEHXZ) в функции "private: virtual void __thiscall HashTableList_can_get_current_pos_Test::TestBody(void)" (?TestBody@HashTableList_can_get_current_pos_Test@@EAEXXZ).
test_hash_table_list.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: int __thiscall HashTableList::hash_string(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?hash_string@HashTableList@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall HashTableList_can_hash_string_Test::TestBody(void)" (?TestBody@HashTableList_can_hash_string_Test@@EAEXXZ).
test_list_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall Polynom::Polynom(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (??0Polynom@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall ArrayTable_can_find_elem_Test::TestBody(void)" (?TestBody@ArrayTable_can_find_elem_Test@@EAEXXZ).
test_table_string.obj : error LNK2001: неразрешенный внешний символ "public: __thiscall Polynom::Polynom(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)" (??0Polynom@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
test_list_table.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall Polynom::str(void)const " (?str@Polynom@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ) в функции "public: __thiscall TableBody::TableBody(class Polynom const &)" (??0TableBody@@QAE@ABVPolynom@@@Z).
test_table_string.obj : error LNK2001: неразрешенный внешний символ "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall Polynom::str(void)const " (?str@Polynom@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "private: void __thiscall RedBlackTree::destroy(struct RBTNode * &)" (?destroy@RedBlackTree@@AAEXAAPAURBTNode@@@Z) в функции "public: virtual __thiscall RedBlackTree::~RedBlackTree(void)" (??1RedBlackTree@@UAE@XZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual struct TableString * __thiscall RedBlackTree::find_str(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?find_str@RedBlackTree@@UAEPAUTableString@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall RedBlackTree_can_find_elem_Test::TestBody(void)" (?TestBody@RedBlackTree_can_find_elem_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall RedBlackTree::insert(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,struct TableBody &)" (?insert@RedBlackTree@@UAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAUTableBody@@@Z) в функции "private: virtual void __thiscall RedBlackTree_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@RedBlackTree_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall RedBlackTree::erase(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?erase@RedBlackTree@@UAE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) в функции "private: virtual void __thiscall RedBlackTree_can_delete_existing_elem_Test::TestBody(void)" (?TestBody@RedBlackTree_can_delete_existing_elem_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2001: неразрешенный внешний символ "public: virtual bool __thiscall RedBlackTree::is_full(void)const " (?is_full@RedBlackTree@@UBE_NXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall RedBlackTree::reset(void)" (?reset@RedBlackTree@@UAE_NXZ) в функции "private: virtual void __thiscall RedBlackTree_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@RedBlackTree_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall RedBlackTree::is_tab_ended(void)const " (?is_tab_ended@RedBlackTree@@UBE_NXZ) в функции "private: virtual void __thiscall RedBlackTree_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@RedBlackTree_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual bool __thiscall RedBlackTree::go_next(void)" (?go_next@RedBlackTree@@UAE_NXZ) в функции "private: virtual void __thiscall RedBlackTree_can_check_is_tab_ended_1_Test::TestBody(void)" (?TestBody@RedBlackTree_can_check_is_tab_ended_1_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall RedBlackTree::set_current_pos(int)" (?set_current_pos@RedBlackTree@@QAE_NH@Z) в функции "private: virtual void __thiscall RedBlackTree_can_set_current_pos_Test::TestBody(void)" (?TestBody@RedBlackTree_can_set_current_pos_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: int __thiscall RedBlackTree::get_current_pos(void)const " (?get_current_pos@RedBlackTree@@QBEHXZ) в функции "private: virtual void __thiscall RedBlackTree_can_get_current_pos_Test::TestBody(void)" (?TestBody@RedBlackTree_can_get_current_pos_Test@@EAEXXZ).
test_red_black_tree.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual struct TableString * __thiscall RedBlackTree::get_value(void)" (?get_value@RedBlackTree@@UAEPAUTableString@@XZ) в функции "private: virtual void __thiscall RedBlackTree_can_get_value_Test::TestBody(void)" (?TestBody@RedBlackTree_can_get_value_Test@@EAEXXZ).
C:\Users\Андрей\mp2-lab6-polynom-algebra\Debug\base_test.exe : fatal error LNK1120: неразрешенных внешних элементов: 34
